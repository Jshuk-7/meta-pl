StructDef('Car': fields: [
	make: String,
	model: String,
	year: i32,
])

Impl('Car': [
		ProcDef('new':
	return_type: Car
	args: [
		make: String,
		model: String,
		year: i32,
	]
	content: [
		Return(Struct('Car': fields: [
			make: Variable('make': Literal('': String)),
			model: Variable('model': Literal('': String)),
			year: Variable('year': Literal('0': Number)),
		]))
	]
)

	])
StructDef('Person': fields: [
	name: String,
	age: i32,
])

Impl('Person': [
		ProcDef('new':
	return_type: Person
	args: []
	content: [
		Let('person': Struct('Person': fields: [
			name: Literal('Jackson': String),
			age: Literal('22': Number),
		]))
		Return(Variable('person': Struct('Person': fields: [
			name: Literal('Jackson': String),
			age: Literal('22': Number),
		])))
	]
)

	])
ProcDef('main':
	return_type: i32
	args: []
	content: [
		Let('car': Struct('Car': fields: [
			make: Literal('Toyota': String),
			model: Literal('Camry': String),
			year: Literal('2023': Number),
		]))
		StructFieldAssign('car': field: 'year': value: Literal('2010': Number))
		If(BinaryOp(StructFieldAccess('car': field: 'year': value: Literal('2010': Number)), Eq, Literal('2010': Number)): [
			While(BinaryOp(StructFieldAccess('car': field: 'year': value: Literal('2010': Number)), Lt, Literal('2023': Number)): [
			BinaryOp(StructFieldAccess('car': field: 'year': value: Literal('2010': Number)), AddAssign, Literal('1': Number))
		])
		])
		Let('int': Literal('0': Number))
		BinaryOp(Variable('int': Literal('0': Number)), AddAssign, Literal('1': Number))
		For(year: Range(Literal('2010': Number)..Literal('2024': Number)): [
			Let('new_car': ImplFunCall('Car': FunCall('new': args: [
			make: Literal('Honda': String)
			model: Literal('Accord': String)
			year: Variable('year': Literal('2010': Number))
		])))
		])
		Return(Literal('0': Number))
	]
)

