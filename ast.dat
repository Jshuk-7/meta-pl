ProcDef('print':
	return_type: None
	args: [
		msg: String,
	]
	content: []
)

ProcDef('main':
	return_type: None
	args: []
	content: [
		If(BinaryOp(Literal('1': Number), Eq, Literal('2': Number)): [
			Let('a': Literal('10': Number))
		])
		Let('name': Literal('Jackson': String))
		FunCall('print': args: [
			msg: Variable('name': Literal('Jackson': String))
		])
	]
)

